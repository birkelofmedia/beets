{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Beets CSS! Beets CSS is a CSS addon-library that is dependent on the Bootstrap framework. You will have to install Bootstrap for this library to work. The porpose of Beets CSS is to tweek the already great Bootstrap framework and give it a somewhat new feel and some new functions. Beside a number of subtle design changes there are new button types, cursor classes and dropdown functions. Please refer to the documentation to learn more about what is different from the default Bootstrap experience. Bootstrap is open source and because of that Beets CSS is also open source. On the projects GitHub page you can access all of the source files and tweek it yourself as you wish.","title":"Welcome to Beets CSS!"},{"location":"#welcome-to-beets-css","text":"Beets CSS is a CSS addon-library that is dependent on the Bootstrap framework. You will have to install Bootstrap for this library to work. The porpose of Beets CSS is to tweek the already great Bootstrap framework and give it a somewhat new feel and some new functions. Beside a number of subtle design changes there are new button types, cursor classes and dropdown functions. Please refer to the documentation to learn more about what is different from the default Bootstrap experience. Bootstrap is open source and because of that Beets CSS is also open source. On the projects GitHub page you can access all of the source files and tweek it yourself as you wish.","title":"Welcome to Beets CSS!"},{"location":"docs/","text":"Documentation Welcome to the documentations page. Here you will find every change that Beets CSS does to Bootstrap.","title":"Documentation"},{"location":"docs/#documentation","text":"Welcome to the documentations page. Here you will find every change that Beets CSS does to Bootstrap.","title":"Documentation"},{"location":"docs/components/breadcrumb/","text":".md-typeset .demo ol.breadcrumb:not([hidden]) { display: flex; font-size: 16px; } [dir=\"ltr\"] .md-typeset .demo ol, [dir=\"ltr\"] .md-typeset .demo ol li { margin-left: 0; } [dir=\"ltr\"] .md-typeset .demo ol li { margin-bottom: 0; } Breadcrumb The only thing that is different betewwn Beets and Bootstrap is the formatting of the links. The Bootstrap links are underlined where the Beets links are only underlined while hovering. Home Library Data < nav aria-label = \"breadcrumb\" > < ol class = \"breadcrumb\" > < li class = \"breadcrumb-item\" >< a href = \"#\" > Home </ a ></ li > < li class = \"breadcrumb-item\" >< a href = \"#\" > Library </ a ></ li > < li class = \"breadcrumb-item active\" aria-current = \"page\" > Data </ li > </ ol > </ nav >","title":"Breadcrumb"},{"location":"docs/components/breadcrumb/#breadcrumb","text":"The only thing that is different betewwn Beets and Bootstrap is the formatting of the links. The Bootstrap links are underlined where the Beets links are only underlined while hovering. Home Library Data < nav aria-label = \"breadcrumb\" > < ol class = \"breadcrumb\" > < li class = \"breadcrumb-item\" >< a href = \"#\" > Home </ a ></ li > < li class = \"breadcrumb-item\" >< a href = \"#\" > Library </ a ></ li > < li class = \"breadcrumb-item active\" aria-current = \"page\" > Data </ li > </ ol > </ nav >","title":"Breadcrumb"},{"location":"docs/components/buttons/","text":"Buttons Beets CSS comes with two additional button styles: Ghost and Alternative . There is also a class that forces the button to be an exact square. Useful for buttons containing icons or user initials. Styles The Beets CSS styles both make use of the Bootstrap theme colors for your convenience. Regular Note This is the standard Bootstrap button. This is in the documentation for comparison purposes. .btn-{theme-color} Primary Secondary Success Warning Danger Info Light Dark Link < button class = \"btn btn-primary\" > Primary </ button > < button class = \"btn btn-link\" > Link </ button > Outline Note This is the standard outlined Bootstrap button. This is in the documentation for comparison purposes. .btn-outline-{theme-color} Primary Secondary Success Warning Danger Info Light Dark < button class = \"btn btn-outline-primary\" > Primary </ button > Alternative This style can be viewed as a slightly lighter version of the standard buttons. .btn-alt-{theme-color} Primary Secondary Success Warning Danger Info Light Dark < button class = \"btn btn-alt-primary\" > Primary </ button > < button class = \"btn btn-alt-secondary\" > Secondary </ button > < button class = \"btn btn-alt-success\" > Success </ button > < button class = \"btn btn-alt-warning\" > Warning </ button > < button class = \"btn btn-alt-danger\" > Danger </ button > < button class = \"btn btn-alt-info\" > Info </ button > < button class = \"btn btn-alt-light\" > Light </ button > < button class = \"btn btn-alt-dark\" > Dark </ button > Ghost This style makes the button background transparent with the text colored with the chosen theme color. When hovering, the background gets a light version of the theme color. .btn-ghost-{theme-color} Primary Secondary Success Warning Danger Info Light Dark < button class = \"btn btn-ghost-primary\" > Primary </ button > < button class = \"btn btn-ghost-secondary\" > Secondary </ button > < button class = \"btn btn-ghost-success\" > Success </ button > < button class = \"btn btn-ghost-warning\" > Warning </ button > < button class = \"btn btn-ghost-danger\" > Danger </ button > < button class = \"btn btn-ghost-info\" > Info </ button > < button class = \"btn btn-ghost-light\" > Light </ button > < button class = \"btn btn-ghost-dark\" > Dark </ button > Square This is designed for use with an icon like FontAwsome, or short text like initials. The width and height are the same and the content is center vertically and horizontally. To use the square button style, add .btn-square to your standard .btn button. Sizes The .btn-square class also supports the different button sizes. < button class = \"btn btn-primary btn-square btn-lg\" >< i class = \"fa-solid fa-user fa-lg\" ></ i ></ button > < button class = \"btn btn-primary btn-square\" >< i class = \"fa-solid fa-user\" ></ i ></ button > < button class = \"btn btn-primary btn-square btn-sm\" >< i class = \"fa-solid fa-user fa-sm\" ></ i ></ button > Inspiration Here are some buttons for your inspiration! JB < button class = \"btn btn-square btn-primary\" >< i class = \"fa-solid fa-user\" ></ i ></ button > < button class = \"btn btn-square btn-primary rounded-circle\" > JB </ button > < button class = \"btn btn-square btn-outline-secondary rounded-circle\" >< i class = \"fa-solid fa-pen\" ></ i ></ button > < button class = \"btn btn-square btn-outline-danger rounded-0\" >< i class = \"fa-solid fa-trash\" ></ i ></ button > < button class = \"btn btn-square btn-ghost-secondary\" >< i class = \"fa-solid fa-bars\" ></ i ></ button > < button class = \"btn btn-square btn-ghost-dark rounded-circle\" >< i class = \"fa-solid fa-arrow-left\" ></ i ></ button > Responsiveness You can use breakpoints .btn-square-{sm|md|lg|xl|xxl}-0 to decide from what screen size a button should have the square class. XS SM MD LG XL XXL < button class = \"btn btn-primary btn-square\" > XS </ button > < button class = \"btn btn-primary btn-square-sm\" > SM </ button > < button class = \"btn btn-primary btn-square-md\" > MD </ button > < button class = \"btn btn-primary btn-square-lg\" > LG </ button > < button class = \"btn btn-primary btn-square-xl\" > XL </ button > < button class = \"btn btn-primary btn-square-xxl\" > XXL </ button > Reset You can also use the reset class .btn-square-0 to remove the square styling. The reset class is also responsive with the .btn-square-{sm|md|lg|xl|xxl}-0 class which makes it useful for when you don't want to have a square button on smaller screen sizes. XS SM MD LG XL XXL < button class = \"btn btn-primary btn-square-0\" > XS </ button > < button class = \"btn btn-primary btn-square-sm-0\" > SM </ button > < button class = \"btn btn-primary btn-square-md-0\" > MD </ button > < button class = \"btn btn-primary btn-square-lg-0\" > LG </ button > < button class = \"btn btn-primary btn-square-xl-0\" > XL </ button > < button class = \"btn btn-primary btn-square-xxl-0\" > XXL </ button >","title":"Buttons"},{"location":"docs/components/buttons/#buttons","text":"Beets CSS comes with two additional button styles: Ghost and Alternative . There is also a class that forces the button to be an exact square. Useful for buttons containing icons or user initials.","title":"Buttons"},{"location":"docs/components/buttons/#styles","text":"The Beets CSS styles both make use of the Bootstrap theme colors for your convenience.","title":"Styles"},{"location":"docs/components/buttons/#regular","text":"Note This is the standard Bootstrap button. This is in the documentation for comparison purposes. .btn-{theme-color} Primary Secondary Success Warning Danger Info Light Dark Link < button class = \"btn btn-primary\" > Primary </ button > < button class = \"btn btn-link\" > Link </ button >","title":"Regular"},{"location":"docs/components/buttons/#outline","text":"Note This is the standard outlined Bootstrap button. This is in the documentation for comparison purposes. .btn-outline-{theme-color} Primary Secondary Success Warning Danger Info Light Dark < button class = \"btn btn-outline-primary\" > Primary </ button >","title":"Outline"},{"location":"docs/components/buttons/#alternative","text":"This style can be viewed as a slightly lighter version of the standard buttons. .btn-alt-{theme-color} Primary Secondary Success Warning Danger Info Light Dark < button class = \"btn btn-alt-primary\" > Primary </ button > < button class = \"btn btn-alt-secondary\" > Secondary </ button > < button class = \"btn btn-alt-success\" > Success </ button > < button class = \"btn btn-alt-warning\" > Warning </ button > < button class = \"btn btn-alt-danger\" > Danger </ button > < button class = \"btn btn-alt-info\" > Info </ button > < button class = \"btn btn-alt-light\" > Light </ button > < button class = \"btn btn-alt-dark\" > Dark </ button >","title":"Alternative"},{"location":"docs/components/buttons/#ghost","text":"This style makes the button background transparent with the text colored with the chosen theme color. When hovering, the background gets a light version of the theme color. .btn-ghost-{theme-color} Primary Secondary Success Warning Danger Info Light Dark < button class = \"btn btn-ghost-primary\" > Primary </ button > < button class = \"btn btn-ghost-secondary\" > Secondary </ button > < button class = \"btn btn-ghost-success\" > Success </ button > < button class = \"btn btn-ghost-warning\" > Warning </ button > < button class = \"btn btn-ghost-danger\" > Danger </ button > < button class = \"btn btn-ghost-info\" > Info </ button > < button class = \"btn btn-ghost-light\" > Light </ button > < button class = \"btn btn-ghost-dark\" > Dark </ button >","title":"Ghost"},{"location":"docs/components/buttons/#square","text":"This is designed for use with an icon like FontAwsome, or short text like initials. The width and height are the same and the content is center vertically and horizontally. To use the square button style, add .btn-square to your standard .btn button.","title":"Square"},{"location":"docs/components/buttons/#sizes","text":"The .btn-square class also supports the different button sizes. < button class = \"btn btn-primary btn-square btn-lg\" >< i class = \"fa-solid fa-user fa-lg\" ></ i ></ button > < button class = \"btn btn-primary btn-square\" >< i class = \"fa-solid fa-user\" ></ i ></ button > < button class = \"btn btn-primary btn-square btn-sm\" >< i class = \"fa-solid fa-user fa-sm\" ></ i ></ button >","title":"Sizes"},{"location":"docs/components/buttons/#inspiration","text":"Here are some buttons for your inspiration! JB < button class = \"btn btn-square btn-primary\" >< i class = \"fa-solid fa-user\" ></ i ></ button > < button class = \"btn btn-square btn-primary rounded-circle\" > JB </ button > < button class = \"btn btn-square btn-outline-secondary rounded-circle\" >< i class = \"fa-solid fa-pen\" ></ i ></ button > < button class = \"btn btn-square btn-outline-danger rounded-0\" >< i class = \"fa-solid fa-trash\" ></ i ></ button > < button class = \"btn btn-square btn-ghost-secondary\" >< i class = \"fa-solid fa-bars\" ></ i ></ button > < button class = \"btn btn-square btn-ghost-dark rounded-circle\" >< i class = \"fa-solid fa-arrow-left\" ></ i ></ button >","title":"Inspiration"},{"location":"docs/components/buttons/#responsiveness","text":"You can use breakpoints .btn-square-{sm|md|lg|xl|xxl}-0 to decide from what screen size a button should have the square class. XS SM MD LG XL XXL < button class = \"btn btn-primary btn-square\" > XS </ button > < button class = \"btn btn-primary btn-square-sm\" > SM </ button > < button class = \"btn btn-primary btn-square-md\" > MD </ button > < button class = \"btn btn-primary btn-square-lg\" > LG </ button > < button class = \"btn btn-primary btn-square-xl\" > XL </ button > < button class = \"btn btn-primary btn-square-xxl\" > XXL </ button >","title":"Responsiveness"},{"location":"docs/components/buttons/#reset","text":"You can also use the reset class .btn-square-0 to remove the square styling. The reset class is also responsive with the .btn-square-{sm|md|lg|xl|xxl}-0 class which makes it useful for when you don't want to have a square button on smaller screen sizes. XS SM MD LG XL XXL < button class = \"btn btn-primary btn-square-0\" > XS </ button > < button class = \"btn btn-primary btn-square-sm-0\" > SM </ button > < button class = \"btn btn-primary btn-square-md-0\" > MD </ button > < button class = \"btn btn-primary btn-square-lg-0\" > LG </ button > < button class = \"btn btn-primary btn-square-xl-0\" > XL </ button > < button class = \"btn btn-primary btn-square-xxl-0\" > XXL </ button >","title":"Reset"},{"location":"docs/components/callout/","text":".callout { border-radius: 6px; border-left-width: 6px; font-size: 16px; } .callout-header { padding: 8px 16px; } .callout-body { padding: 16px; } .callout-icon { margin-right: 16px; } Callout A callout can be used as a short information notice. Unlike the Bootstrap alert, this is not meant to call for the users attention when an action has happened. The callout has a parent class .callout and two child classes: .callout-header and .callout-body . Header Body Header Body < div class = \"callout callout-primary\" > < div class = \"callout-header\" > < div class = \"callout-icon\" > < i class = \"fa-solid fa-info-circle\" ></ i > </ div > Header </ div > < div class = \"callout-body\" > Body </ div > </ div > < div class = \"callout callout-primary\" > < div class = \"callout-header\" > Header </ div > < div class = \"callout-body\" > Body </ div > </ div > Styling You can use all of the Bootstrap theme colors with the callout. Just add the .callout-{theme-color} class to the parent .callout class to style it. Primary Body Secondary Body Success Body Warning Body Danger Body Info Body Light Body Dark Body < div class = \"callout callout-primary\" > ... </ div > < div class = \"callout callout-secondary\" > ... </ div > < div class = \"callout callout-success\" > ... </ div > < div class = \"callout callout-warning\" > ... </ div > < div class = \"callout callout-danger\" > ... </ div > < div class = \"callout callout-info\" > ... </ div > < div class = \"callout callout-light\" > ... </ div > < div class = \"callout callout-dark\" > ... </ div > Icons Tha callout has an .callout-icon class that can wrap an icon to give it a right margin. It can be used in the .callout-header and .callout-body . Header The header background has a lighter version of the theme color. You can use the header without the body if you just want a quick info with some coloring. Header Header < div class = \"callout callout-primary\" > < div class = \"callout-header\" > < div class = \"callout-icon\" >< i class = \"fa-solid fa-info-circle\" ></ i ></ div > Header </ div > </ div > < div class = \"callout callout-primary\" > < div class = \"callout-header\" > Header </ div > </ div > Body The body can contain the information you want to communicate. It can be used without the header for a more compact style, and of course with an icon. Body Body < div class = \"callout callout-primary\" > < div class = \"callout-header\" > < div class = \"callout-icon\" >< i class = \"fa-solid fa-info-circle\" ></ i ></ div > Header </ div > </ div > < div class = \"callout callout-primary\" > < div class = \"callout-header\" > Header </ div > </ div >","title":"Callout"},{"location":"docs/components/callout/#callout","text":"A callout can be used as a short information notice. Unlike the Bootstrap alert, this is not meant to call for the users attention when an action has happened. The callout has a parent class .callout and two child classes: .callout-header and .callout-body . Header Body Header Body < div class = \"callout callout-primary\" > < div class = \"callout-header\" > < div class = \"callout-icon\" > < i class = \"fa-solid fa-info-circle\" ></ i > </ div > Header </ div > < div class = \"callout-body\" > Body </ div > </ div > < div class = \"callout callout-primary\" > < div class = \"callout-header\" > Header </ div > < div class = \"callout-body\" > Body </ div > </ div >","title":"Callout"},{"location":"docs/components/callout/#styling","text":"You can use all of the Bootstrap theme colors with the callout. Just add the .callout-{theme-color} class to the parent .callout class to style it. Primary Body Secondary Body Success Body Warning Body Danger Body Info Body Light Body Dark Body < div class = \"callout callout-primary\" > ... </ div > < div class = \"callout callout-secondary\" > ... </ div > < div class = \"callout callout-success\" > ... </ div > < div class = \"callout callout-warning\" > ... </ div > < div class = \"callout callout-danger\" > ... </ div > < div class = \"callout callout-info\" > ... </ div > < div class = \"callout callout-light\" > ... </ div > < div class = \"callout callout-dark\" > ... </ div >","title":"Styling"},{"location":"docs/components/callout/#icons","text":"Tha callout has an .callout-icon class that can wrap an icon to give it a right margin. It can be used in the .callout-header and .callout-body .","title":"Icons"},{"location":"docs/components/callout/#header","text":"The header background has a lighter version of the theme color. You can use the header without the body if you just want a quick info with some coloring. Header Header < div class = \"callout callout-primary\" > < div class = \"callout-header\" > < div class = \"callout-icon\" >< i class = \"fa-solid fa-info-circle\" ></ i ></ div > Header </ div > </ div > < div class = \"callout callout-primary\" > < div class = \"callout-header\" > Header </ div > </ div >","title":"Header"},{"location":"docs/components/callout/#body","text":"The body can contain the information you want to communicate. It can be used without the header for a more compact style, and of course with an icon. Body Body < div class = \"callout callout-primary\" > < div class = \"callout-header\" > < div class = \"callout-icon\" >< i class = \"fa-solid fa-info-circle\" ></ i ></ div > Header </ div > </ div > < div class = \"callout callout-primary\" > < div class = \"callout-header\" > Header </ div > </ div >","title":"Body"},{"location":"docs/components/card/","text":"/* Card styling */ .demo .card { border-radius: 6px; } .demo .card-header, .demo .card-footer { padding: 12px 24px; } .demo .card-body { padding: 24px; } .demo .card-title { margin-bottom: 8px; margin-top: 0; } /* Card table */ .demo .card-table { margin-left: -24px; margin-right: -24px; } .demo .card-table tr th, .demo .card-table tr td { padding: 8px; } .demo .card-table tr th:first-child, .demo .card-table tr td:first-child { padding-left: 24px; } .demo .card-table tr th:last-child, .demo .card-table tr td:last-child { padding-right: 24px; } .demo .card-table tr th { font-weight: 700; } Card The changes made to the card classes are mostly related to spacings. The header and footer has white backgrounds as default instead of light gray. Use the Bootstrap class .bg-light on .card-header and .card-footer to make it look like the Bootstrap default. Example Header Card title Card subtitle Some quick example text to build on the card title and make up the bulk of the card's content. Go somewhere Footer < div class = \"card\" > < div class = \"card-header\" > Header </ div > < div class = \"card-body\" > < h3 class = \"card-title\" > Card title </ h3 > < h6 class = \"card-subtitle mb-2 text-muted\" > Card subtitle </ h6 > < p class = \"card-text\" > Some quick example text to build on the card title and make up the bulk of the card's content. </ p > < button class = \"btn btn-primary\" > Go somewhere </ button > </ div > < div class = \"card-footer\" > Footer </ div > </ div > Card Table You can have a table bypass the .card-body gutter and span the full width of the card for a stylish look. Just wrap the <table> tag with a div with .card-table and remove the padding on the y-axis on .card-body and the bottom margin of the table with .margin-bottom . The styling can be used to gice the table rounded corners which can't be done by using the .rounded-* classes. # 1 2 3 1 A A A 2 B B B < div class = \"card\" > < div class = \"card-body py-0\" > < div class = \"card-table\" > < table class = \"table mb-0\" > ... </ table > </ div > </ div > </ div > This is a headline Lorem ipsum dolor sit amet consectetur adipisicing elit. Odit molestias labore consequuntur ut temporibus vero quasi recusandae culpa, esse doloremque ullam odio distinctio quibusdam laborum adipisci nam porro, quos quisquam veniam voluptatibus rerum unde. # 1 2 3 1 A A A 2 B B B 3 C C C < div class = \"card\" > < div class = \"card-body pb-0\" > < h3 class = \"card-title\" > This is a headline </ h3 > < p class = \"card-text\" > ... </ p > < div class = \"card-table\" > < table class = \"table mb-0\" > ... </ table > </ div > </ div > </ div >","title":"Card"},{"location":"docs/components/card/#card","text":"The changes made to the card classes are mostly related to spacings. The header and footer has white backgrounds as default instead of light gray. Use the Bootstrap class .bg-light on .card-header and .card-footer to make it look like the Bootstrap default.","title":"Card"},{"location":"docs/components/card/#example","text":"Header","title":"Example"},{"location":"docs/components/card/#card-table","text":"You can have a table bypass the .card-body gutter and span the full width of the card for a stylish look. Just wrap the <table> tag with a div with .card-table and remove the padding on the y-axis on .card-body and the bottom margin of the table with .margin-bottom . The styling can be used to gice the table rounded corners which can't be done by using the .rounded-* classes. # 1 2 3 1 A A A 2 B B B < div class = \"card\" > < div class = \"card-body py-0\" > < div class = \"card-table\" > < table class = \"table mb-0\" > ... </ table > </ div > </ div > </ div >","title":"Card Table"},{"location":"docs/components/dropdowns/","text":".md-typeset .demo ul { list-style-type: none; margin-bottom: 0; margin-left: 0; margin-top: 3px; padding: 8px 0; } .md-typeset .demo ul li { margin: 0; } .demo .dropdown-menu { border-radius: 6px; display: flex; flex-shrink: 1; min-width: 160px; position: initial; width: 178px; } .demo .dropdown-item { color: var(--bs-body-color); font-size: 16px; padding: 4px 16px; } .demo .dropdown-item:hover { color: var(--bs-body-color); } Dropdowns The Beets CSS dropdowns has a nice shadow! Dropdown button Action Another action Something else here < div class = \"dropdown\" > < button class = \"btn btn-primary dropdown-toggle\" type = \"button\" data-bs-toggle = \"dropdown\" aria-expanded = \"false\" > Dropdown button </ button > < ul class = \"dropdown-menu\" > < li >< a class = \"dropdown-item\" href = \"#\" > Action </ a ></ li > < li >< a class = \"dropdown-item\" href = \"#\" > Another action </ a ></ li > < li >< a class = \"dropdown-item\" href = \"#\" > Something else here </ a ></ li > </ ul > </ div > No caret With the .dropdown-no-caret class on the <button> tag you can remove the default caret from the dropdown button. This is really useful when you want a nice menu button, for instance. No caret < div class = \"dropdown\" > < button class = \"btn btn-primary dropdown-toggle dropdown-no-caret\" type = \"button\" data-bs-toggle = \"dropdown\" aria-expanded = \"false\" > No caret </ button > ... </ div > < div class = \"dropdown\" > < button class = \"btn btn-primary btn-square dropdown-toggle dropdown-no-caret\" type = \"button\" data-bs-toggle = \"dropdown\" aria-expanded = \"false\" > < i class = \"fa-solid fa-bars\" ></ i > </ button > ... </ div > < div class = \"dropdown\" > < button class = \"btn btn-ghost-secondary btn-square rounded-circle dropdown-toggle dropdown-no-caret\" type = \"button\" data-bs-toggle = \"dropdown\" aria-expanded = \"false\" > < i class = \"fa-solid fa-cog\" ></ i > </ button > ... </ div > Custom caret With the default caret removed, you can easily add your own custom carets with something like Font Awesome and som styling! Custom caret < div class = \"dropdown\" > < button class = \"btn btn-primary dropdown-toggle dropdown-no-caret\" type = \"button\" data-bs-toggle = \"dropdown\" aria-expanded = \"false\" > Custom caret < i class = \"fa-solid fa-xs fa-chevron-down ms-1\" ></ i > </ button > < ul class = \"dropdown-menu\" > < li >< a class = \"dropdown-item\" href = \"#\" > Action </ a ></ li > < li >< a class = \"dropdown-item\" href = \"#\" > Another action </ a ></ li > < li >< a class = \"dropdown-item\" href = \"#\" > Something else here </ a ></ li > </ ul > </ div >","title":"Dropdowns"},{"location":"docs/components/dropdowns/#dropdowns","text":"The Beets CSS dropdowns has a nice shadow! Dropdown button Action Another action Something else here < div class = \"dropdown\" > < button class = \"btn btn-primary dropdown-toggle\" type = \"button\" data-bs-toggle = \"dropdown\" aria-expanded = \"false\" > Dropdown button </ button > < ul class = \"dropdown-menu\" > < li >< a class = \"dropdown-item\" href = \"#\" > Action </ a ></ li > < li >< a class = \"dropdown-item\" href = \"#\" > Another action </ a ></ li > < li >< a class = \"dropdown-item\" href = \"#\" > Something else here </ a ></ li > </ ul > </ div >","title":"Dropdowns"},{"location":"docs/components/dropdowns/#no-caret","text":"With the .dropdown-no-caret class on the <button> tag you can remove the default caret from the dropdown button. This is really useful when you want a nice menu button, for instance. No caret < div class = \"dropdown\" > < button class = \"btn btn-primary dropdown-toggle dropdown-no-caret\" type = \"button\" data-bs-toggle = \"dropdown\" aria-expanded = \"false\" > No caret </ button > ... </ div > < div class = \"dropdown\" > < button class = \"btn btn-primary btn-square dropdown-toggle dropdown-no-caret\" type = \"button\" data-bs-toggle = \"dropdown\" aria-expanded = \"false\" > < i class = \"fa-solid fa-bars\" ></ i > </ button > ... </ div > < div class = \"dropdown\" > < button class = \"btn btn-ghost-secondary btn-square rounded-circle dropdown-toggle dropdown-no-caret\" type = \"button\" data-bs-toggle = \"dropdown\" aria-expanded = \"false\" > < i class = \"fa-solid fa-cog\" ></ i > </ button > ... </ div >","title":"No caret"},{"location":"docs/components/dropdowns/#custom-caret","text":"With the default caret removed, you can easily add your own custom carets with something like Font Awesome and som styling! Custom caret < div class = \"dropdown\" > < button class = \"btn btn-primary dropdown-toggle dropdown-no-caret\" type = \"button\" data-bs-toggle = \"dropdown\" aria-expanded = \"false\" > Custom caret < i class = \"fa-solid fa-xs fa-chevron-down ms-1\" ></ i > </ button > < ul class = \"dropdown-menu\" > < li >< a class = \"dropdown-item\" href = \"#\" > Action </ a ></ li > < li >< a class = \"dropdown-item\" href = \"#\" > Another action </ a ></ li > < li >< a class = \"dropdown-item\" href = \"#\" > Something else here </ a ></ li > </ ul > </ div >","title":"Custom caret"},{"location":"docs/components/modal/","text":".modal-content { border-radius: 6px; } .modal-header, .modal-footer { padding: 12px 24px; } .modal-header .modal-title { margin: 0; letter-spacing: 0.04rem; font-weight: 500; text-transform: initial; color: var(--bs-dark); } .modal-body { padding: 24px; } .modal-body p { margin-bottom: 16px; } Modal The modals have just been styled slightly to look like the cards with a little wider x-axis padding on the body, header and footer as well as a shadow. The last <p> tag in the body will have margin-bottom: 0; automaticlly. You can add .mb-3 to the last <p> tag to bypass this. Modal title Modal body text goes here. Modal body text goes here. Save changes Close","title":"Modal"},{"location":"docs/components/modal/#modal","text":"The modals have just been styled slightly to look like the cards with a little wider x-axis padding on the body, header and footer as well as a shadow. The last <p> tag in the body will have margin-bottom: 0; automaticlly. You can add .mb-3 to the last <p> tag to bypass this.","title":"Modal"},{"location":"docs/forms/checks-and-radios/","text":"Checks and Radios In Beets CSS you have assex to checkboxes, radios and switches styled by the theme colors. The reason why Bootstrap haven't included this functionality is propably because they have build in form validation, that styles the form controls like success or danger if the input is valid or invalid. This is a really good reason so be careful styling your forms with the classes below! What is actually useful is the fact that you can create your own theme color and use it within your form! You add the .form-check-* class to any <div class=\"form-check\"> to style the form control. Checkbox Primary Secondary Success Warning Danger Info Light Dark < div class = \"form-check form-check-inline form-check-primary\" > < input class = \"form-check-input\" type = \"checkbox\" id = \"inlineCheckbox1\" > < label class = \"form-check-label\" for = \"inlineCheckbox1\" > Primary </ label > </ div > Radio Primary Secondary Success Warning Danger Info Light Dark < div class = \"form-check form-check-inline form-check-primary\" > < input class = \"form-check-input\" type = \"radio\" id = \"inlineRadio1\" name = \"inlineRadio1\" > < label class = \"form-check-label\" for = \"inlineRadio1\" > Primary </ label > </ div > Switch Primary Secondary Success Warning Danger Info Light Dark < div class = \"form-check form-switch form-check-inline form-check-primary\" > < input class = \"form-check-input\" type = \"checkbox\" id = \"inlineCheckbox1\" > < label class = \"form-check-label\" for = \"inlineCheckbox1\" > Primary </ label > </ div >","title":"Checks and radios"},{"location":"docs/forms/checks-and-radios/#checks-and-radios","text":"In Beets CSS you have assex to checkboxes, radios and switches styled by the theme colors. The reason why Bootstrap haven't included this functionality is propably because they have build in form validation, that styles the form controls like success or danger if the input is valid or invalid. This is a really good reason so be careful styling your forms with the classes below! What is actually useful is the fact that you can create your own theme color and use it within your form! You add the .form-check-* class to any <div class=\"form-check\"> to style the form control.","title":"Checks and Radios"},{"location":"docs/forms/checks-and-radios/#checkbox","text":"Primary Secondary Success Warning Danger Info Light Dark < div class = \"form-check form-check-inline form-check-primary\" > < input class = \"form-check-input\" type = \"checkbox\" id = \"inlineCheckbox1\" > < label class = \"form-check-label\" for = \"inlineCheckbox1\" > Primary </ label > </ div >","title":"Checkbox"},{"location":"docs/forms/checks-and-radios/#radio","text":"Primary Secondary Success Warning Danger Info Light Dark < div class = \"form-check form-check-inline form-check-primary\" > < input class = \"form-check-input\" type = \"radio\" id = \"inlineRadio1\" name = \"inlineRadio1\" > < label class = \"form-check-label\" for = \"inlineRadio1\" > Primary </ label > </ div >","title":"Radio"},{"location":"docs/forms/checks-and-radios/#switch","text":"Primary Secondary Success Warning Danger Info Light Dark < div class = \"form-check form-switch form-check-inline form-check-primary\" > < input class = \"form-check-input\" type = \"checkbox\" id = \"inlineCheckbox1\" > < label class = \"form-check-label\" for = \"inlineCheckbox1\" > Primary </ label > </ div >","title":"Switch"},{"location":"docs/utilities/colors/","text":"Colors If you use a sass compiler you can easily add your own custom colors to the css variables and Bootstrap theme. This can be done even without Beets CSS, but we have lifted out the function to a separate file. In the scss folder and in the maps folder there is a file named _bcss-custom-colors-scss . Here you can create and name you own colors. scss/maps/_bcss-custom-colors.scss 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 // Custom colors $crimson : #9a0044 ; $magenta : #d63384 ; $gold : #fd7e14 ; $turquoise : #20c997 ; // Custom colors map (add to css variables) $beets-colors : ( \"crimson\" : $crimson , \"magenta\" : $magenta , \"gold\" : $gold , \"turquoise\" : $turquoise , ); // Merge with colors map $colors : map-merge ( $colors , $beets-colors ); // Custom theme colors map (add to Bootstrap theme) $beets-theme-colors : ( \"beets\" : $crimson , \"bubblegum\" : $magenta , \"autumn\" : $gold , \"spring\" : $turquoise , ); // Merge with theme colors map $theme-colors : map-merge ( $theme-colors , $beets-theme-colors );","title":"Colors"},{"location":"docs/utilities/colors/#colors","text":"If you use a sass compiler you can easily add your own custom colors to the css variables and Bootstrap theme. This can be done even without Beets CSS, but we have lifted out the function to a separate file. In the scss folder and in the maps folder there is a file named _bcss-custom-colors-scss . Here you can create and name you own colors. scss/maps/_bcss-custom-colors.scss 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 // Custom colors $crimson : #9a0044 ; $magenta : #d63384 ; $gold : #fd7e14 ; $turquoise : #20c997 ; // Custom colors map (add to css variables) $beets-colors : ( \"crimson\" : $crimson , \"magenta\" : $magenta , \"gold\" : $gold , \"turquoise\" : $turquoise , ); // Merge with colors map $colors : map-merge ( $colors , $beets-colors ); // Custom theme colors map (add to Bootstrap theme) $beets-theme-colors : ( \"beets\" : $crimson , \"bubblegum\" : $magenta , \"autumn\" : $gold , \"spring\" : $turquoise , ); // Merge with theme colors map $theme-colors : map-merge ( $theme-colors , $beets-theme-colors );","title":"Colors"},{"location":"docs/utilities/cursor/","text":"Cursor You can change the cursor style on hover with these classes. Hover over the boxes below to preview. .cursor-crosshair .cursor-default .cursor-help .cursor-initial .cursor-move .cursor-none .cursor-not-allowed .cursor-pointer .cursor-progress .cursor-text .cursor-wait .cursor-zoom-in .cursor-zoom-out < div class = \"bg-light border rounded p-1 cursor-pointer\" > .cursor-pointer </ div > Class name Property .cursor-crosshair cursor: crosshair !important; .cursor-default cursor: default !important; .cursor-help cursor: help !important; .cursor-inital cursor: inital !important; .cursor-move cursor: move !important; .cursor-none cursor: none !important; .cursor-not-allowed cursor: not-allowed !important; .cursor-pointer cursor: pointer !important; .cursor-progress cursor: progress !important; .cursor-text cursor: text !important; .cursor-wait cursor: wait !important; .cursor-zoom-in cursor: zoom-in !important; .cursor-zoom-out cursor: zoom-out !important;","title":"Cursor"},{"location":"docs/utilities/cursor/#cursor","text":"You can change the cursor style on hover with these classes. Hover over the boxes below to preview. .cursor-crosshair .cursor-default .cursor-help .cursor-initial .cursor-move .cursor-none .cursor-not-allowed .cursor-pointer .cursor-progress .cursor-text .cursor-wait .cursor-zoom-in .cursor-zoom-out < div class = \"bg-light border rounded p-1 cursor-pointer\" > .cursor-pointer </ div > Class name Property .cursor-crosshair cursor: crosshair !important; .cursor-default cursor: default !important; .cursor-help cursor: help !important; .cursor-inital cursor: inital !important; .cursor-move cursor: move !important; .cursor-none cursor: none !important; .cursor-not-allowed cursor: not-allowed !important; .cursor-pointer cursor: pointer !important; .cursor-progress cursor: progress !important; .cursor-text cursor: text !important; .cursor-wait cursor: wait !important; .cursor-zoom-in cursor: zoom-in !important; .cursor-zoom-out cursor: zoom-out !important;","title":"Cursor"},{"location":"docs/utilities/spacing/","text":"Spacing The spacers 1-4 are the same as the Bootstrap default values 5 is set to the gutter width (30px) 6 is the original bootstrap value for 5 7 and 8 are added for more variations $spacer = 1rem = 16px. Size 0 0 1 $spacer * .25 2 $spacer * .5 3 $spacer 4 $spacer * 1.5 5 $grid-gutter-width 6 $spacer * 3 7 $spacer * 4 8 $spacer * 5","title":"Spacing"},{"location":"docs/utilities/spacing/#spacing","text":"The spacers 1-4 are the same as the Bootstrap default values 5 is set to the gutter width (30px) 6 is the original bootstrap value for 5 7 and 8 are added for more variations $spacer = 1rem = 16px. Size 0 0 1 $spacer * .25 2 $spacer * .5 3 $spacer 4 $spacer * 1.5 5 $grid-gutter-width 6 $spacer * 3 7 $spacer * 4 8 $spacer * 5","title":"Spacing"},{"location":"getting-started/installation/","text":"Installation Bootstrap First of all, you need to have Bootstrap installed and working on your site. Please refer to the Bootstrap documentation for how to install Bootstrap. Beets CSS 2.0 is developed using Bootstrap version 5.2.2 so make sure you have at least that version installed. Font Awesome This step is optional but you will probably need to have some sort of icon library on your site. There are many good libraries and although Beets CSS should work well with most of them, it was developed with Font Awesome in mind. That means that if you would like the most seamless experience and don't have any personal preference on icon libraries, you should start by looking at Font Awesome. Please go to the Font Awesome website for installation documentation. Beets CSS If you want to make tweeks or changes to Beets CSS and mabye add a custom color scheme, you can use the uncompiled .scss-files and compile yourself. There is not much \"magic\" going on so any sass compiler should do the trick, although Beets CSS is developed using Webpack, Autoprefixer and PostCSS. Then add the compiled beets-css.css file to your site like you normally would. If you just want the out-of-the-box Beets CSS you can just download the css file and add beets-css.css to your site like you normally would. For the latest version of Beets CSS, plese see the GitHub Releases page. Beets CSS does not need any additional JavaScript to work, the files that comes with Bootstrap will do just fine!","title":"Installation"},{"location":"getting-started/installation/#installation","text":"","title":"Installation"},{"location":"getting-started/installation/#bootstrap","text":"First of all, you need to have Bootstrap installed and working on your site. Please refer to the Bootstrap documentation for how to install Bootstrap. Beets CSS 2.0 is developed using Bootstrap version 5.2.2 so make sure you have at least that version installed.","title":"Bootstrap"},{"location":"getting-started/installation/#font-awesome","text":"This step is optional but you will probably need to have some sort of icon library on your site. There are many good libraries and although Beets CSS should work well with most of them, it was developed with Font Awesome in mind. That means that if you would like the most seamless experience and don't have any personal preference on icon libraries, you should start by looking at Font Awesome. Please go to the Font Awesome website for installation documentation.","title":"Font Awesome"},{"location":"getting-started/installation/#beets-css","text":"If you want to make tweeks or changes to Beets CSS and mabye add a custom color scheme, you can use the uncompiled .scss-files and compile yourself. There is not much \"magic\" going on so any sass compiler should do the trick, although Beets CSS is developed using Webpack, Autoprefixer and PostCSS. Then add the compiled beets-css.css file to your site like you normally would. If you just want the out-of-the-box Beets CSS you can just download the css file and add beets-css.css to your site like you normally would. For the latest version of Beets CSS, plese see the GitHub Releases page. Beets CSS does not need any additional JavaScript to work, the files that comes with Bootstrap will do just fine!","title":"Beets CSS"}]}